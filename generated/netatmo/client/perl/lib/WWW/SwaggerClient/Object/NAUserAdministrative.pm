package WWW::SwaggerClient::Object::NAUserAdministrative;

require 5.6.0;
use strict;
use warnings;
use utf8;
use JSON qw(decode_json);
use Data::Dumper;
use Module::Runtime qw(use_module);
use Log::Any qw($log);
use Date::Parse;
use DateTime;

use base "WWW::SwaggerClient::Object::BaseObject";

#
#
#
#NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
#

my $swagger_types = {
    'country' => 'string',
    'lang' => 'string',
    'reg_locale' => 'string',
    'unit' => 'string',
    'windunit' => 'string',
    'pressureunit' => 'string',
    'feel_like_algo' => 'string'
};

my $attribute_map = {
    'country' => 'country',
    'lang' => 'lang',
    'reg_locale' => 'reg_locale',
    'unit' => 'unit',
    'windunit' => 'windunit',
    'pressureunit' => 'pressureunit',
    'feel_like_algo' => 'feel_like_algo'
};

# new object
sub new { 
    my ($class, %args) = @_; 
    my $self = { 
        #user country
        'country' => $args{'country'}, 
        #user locale
        'lang' => $args{'lang'}, 
        #user regional preferences (used for displaying date)
        'reg_locale' => $args{'reg_locale'}, 
        #0 -> metric system, 1 -> imperial system
        'unit' => $args{'unit'}, 
        #0 -> kph, 1 -> mph, 2 -> ms, 3 -> beaufort, 4 -> knot
        'windunit' => $args{'windunit'}, 
        #0 -> mbar, 1 -> inHg, 2 -> mmHg
        'pressureunit' => $args{'pressureunit'}, 
        #algorithm used to compute feel like temperature, 0 -> humidex, 1 -> heat-index
        'feel_like_algo' => $args{'feel_like_algo'}
    }; 

    return bless $self, $class; 
}  

# get swagger type of the attribute
sub get_swagger_types {
    return $swagger_types;
}

# get attribute mappping
sub get_attribute_map {
    return $attribute_map;
}

1;
