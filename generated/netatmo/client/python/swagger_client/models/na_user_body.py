# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class NAUserBody(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        NAUserBody - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'administrative': 'NAUserAdministrative',
            'date_creation': 'NADate',
            'devices': 'list[str]',
            'friend_devices': 'list[str]',
            'mail': 'str',
            'timeline_not_read': 'int',
            'timeline_size': 'int'
        }

        self.attribute_map = {
            'id': '_id',
            'administrative': 'administrative',
            'date_creation': 'date_creation',
            'devices': 'devices',
            'friend_devices': 'friend_devices',
            'mail': 'mail',
            'timeline_not_read': 'timeline_not_read',
            'timeline_size': 'timeline_size'
        }

        self._id = None
        self._administrative = None
        self._date_creation = None
        self._devices = None
        self._friend_devices = None
        self._mail = None
        self._timeline_not_read = None
        self._timeline_size = None

    @property
    def id(self):
        """
        Gets the id of this NAUserBody.


        :return: The id of this NAUserBody.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this NAUserBody.


        :param id: The id of this NAUserBody.
        :type: str
        """
        self._id = id

    @property
    def administrative(self):
        """
        Gets the administrative of this NAUserBody.
        Contains administrative information related to the user

        :return: The administrative of this NAUserBody.
        :rtype: NAUserAdministrative
        """
        return self._administrative

    @administrative.setter
    def administrative(self, administrative):
        """
        Sets the administrative of this NAUserBody.
        Contains administrative information related to the user

        :param administrative: The administrative of this NAUserBody.
        :type: NAUserAdministrative
        """
        self._administrative = administrative

    @property
    def date_creation(self):
        """
        Gets the date_creation of this NAUserBody.


        :return: The date_creation of this NAUserBody.
        :rtype: NADate
        """
        return self._date_creation

    @date_creation.setter
    def date_creation(self, date_creation):
        """
        Sets the date_creation of this NAUserBody.


        :param date_creation: The date_creation of this NAUserBody.
        :type: NADate
        """
        self._date_creation = date_creation

    @property
    def devices(self):
        """
        Gets the devices of this NAUserBody.
        An array of string containing the ids of the devices owned by the user

        :return: The devices of this NAUserBody.
        :rtype: list[str]
        """
        return self._devices

    @devices.setter
    def devices(self, devices):
        """
        Sets the devices of this NAUserBody.
        An array of string containing the ids of the devices owned by the user

        :param devices: The devices of this NAUserBody.
        :type: list[str]
        """
        self._devices = devices

    @property
    def friend_devices(self):
        """
        Gets the friend_devices of this NAUserBody.
        An array of string containing the ids of the devices on which the user has a \"guest\" access

        :return: The friend_devices of this NAUserBody.
        :rtype: list[str]
        """
        return self._friend_devices

    @friend_devices.setter
    def friend_devices(self, friend_devices):
        """
        Sets the friend_devices of this NAUserBody.
        An array of string containing the ids of the devices on which the user has a \"guest\" access

        :param friend_devices: The friend_devices of this NAUserBody.
        :type: list[str]
        """
        self._friend_devices = friend_devices

    @property
    def mail(self):
        """
        Gets the mail of this NAUserBody.


        :return: The mail of this NAUserBody.
        :rtype: str
        """
        return self._mail

    @mail.setter
    def mail(self, mail):
        """
        Sets the mail of this NAUserBody.


        :param mail: The mail of this NAUserBody.
        :type: str
        """
        self._mail = mail

    @property
    def timeline_not_read(self):
        """
        Gets the timeline_not_read of this NAUserBody.


        :return: The timeline_not_read of this NAUserBody.
        :rtype: int
        """
        return self._timeline_not_read

    @timeline_not_read.setter
    def timeline_not_read(self, timeline_not_read):
        """
        Sets the timeline_not_read of this NAUserBody.


        :param timeline_not_read: The timeline_not_read of this NAUserBody.
        :type: int
        """
        self._timeline_not_read = timeline_not_read

    @property
    def timeline_size(self):
        """
        Gets the timeline_size of this NAUserBody.


        :return: The timeline_size of this NAUserBody.
        :rtype: int
        """
        return self._timeline_size

    @timeline_size.setter
    def timeline_size(self, timeline_size):
        """
        Sets the timeline_size of this NAUserBody.


        :param timeline_size: The timeline_size of this NAUserBody.
        :type: int
        """
        self._timeline_size = timeline_size

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
