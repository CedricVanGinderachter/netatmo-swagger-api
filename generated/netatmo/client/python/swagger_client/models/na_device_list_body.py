# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class NADeviceListBody(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        NADeviceListBody - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'devices': 'list[NADevice]',
            'modules': 'list[NAModule]'
        }

        self.attribute_map = {
            'devices': 'devices',
            'modules': 'modules'
        }

        self._devices = None
        self._modules = None

    @property
    def devices(self):
        """
        Gets the devices of this NADeviceListBody.


        :return: The devices of this NADeviceListBody.
        :rtype: list[NADevice]
        """
        return self._devices

    @devices.setter
    def devices(self, devices):
        """
        Sets the devices of this NADeviceListBody.


        :param devices: The devices of this NADeviceListBody.
        :type: list[NADevice]
        """
        self._devices = devices

    @property
    def modules(self):
        """
        Gets the modules of this NADeviceListBody.


        :return: The modules of this NADeviceListBody.
        :rtype: list[NAModule]
        """
        return self._modules

    @modules.setter
    def modules(self, modules):
        """
        Sets the modules of this NADeviceListBody.


        :param modules: The modules of this NADeviceListBody.
        :type: list[NAModule]
        """
        self._modules = modules

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
