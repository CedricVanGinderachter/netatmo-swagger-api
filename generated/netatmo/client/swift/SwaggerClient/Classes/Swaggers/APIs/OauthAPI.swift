//
// OauthAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class OauthAPI: APIBase {
    
        /**
         
         - POST /oauth2/token
         - OAuth2 token endpoint
         - examples: [{contentType=application/json, example={
  "access_token" : "aeiou",
  "refresh_token" : "aeiou",
  "scope" : [ "aeiou" ],
  "expire_in" : 123,
  "expires_in" : 123
}}]
         
         - parameter grantType: (form) Oauth2 grant type
         - parameter clientId: (form) Application client ID
         - parameter clientSecret: (form) Application client secret
         - parameter scope: (form) Scopes to use, separated by a space
         - parameter username: (form) User name if grant_type is password
         - parameter password: (form) User password if grant_type is password
         - parameter code: (form) Authorization code if grant_type is authorization_code
         - parameter redirectUri: (form) Redirect URI if grant_type is authorization_code
         - parameter refreshToken: (form) Refresh token if grant_type is refresh_token

         - returns: RequestBuilder<AccessToken> 
         */
        public class func getToken(grantType grantType: String, clientId: String, clientSecret: String, scope: String?, username: String?, password: String?, code: String?, redirectUri: String?, refreshToken: String?) -> RequestBuilder<AccessToken> {
            let path = "/oauth2/token"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "grantType": grantType,
                "clientId": clientId,
                "clientSecret": clientSecret,
                "scope": scope,
                "username": username,
                "password": password,
                "code": code,
                "redirectUri": redirectUri,
                "refreshToken": refreshToken
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<AccessToken>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
    }
}
