//
// NADevice.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class NADevice: JSONEncodable {

    public var _id: String?
    public var behavior: Int?
    public var cipher_id: String?
    public var date_setup: NADate?
    public var firmware: Int?
    public var hw_version: Int?
    public var heating_system: NAHeatingSystem?
    public var house_model: NAHouseModel?
    public var ip: String?
    public var last_fw_update: Int?
    public var last_radio_store: Int?
    public var last_status_store: Int?
    public var last_upgrade: Int?
    public var module_name: String?
    /** It lists which modules are linked with this device */
    public var modules: [String]?
    public var place: NAPlace?
    public var setpoint: String?
    public var setpoint_default_duration: Int?
    public var setpoint_order: [String:[NAObject]]?
    public var public_ext_data: Bool?
    public var station_name: String?
    public var therm_program: [String:NAThermProgram]?
    public var therm_program_backup: [String:[NAThermProgram]]?
    public var therm_program_order: [String:[NAObject]]?
    /** Included in every device or module. It defines the type of the device/module. Its values are among :\nNAMain : for the base station\nNAModule1 : for the outdoor module\nNAModule4 : for the additionnal indoor module\nNAModule3 : for the rain gauge module\nNAPlug : for the thermostat relay/plug\nNATherm1 : for the thermostat module */
    public var type: String?
    public var user_owner: [String]?
    public var udp_conn: Bool?
    /** It contains the current wifi status. The different thresholds to take into account are\nRSSI_THRESHOLD_0 = 86 bad signal\nRSSI_THRESHOLD_1 = 71 middle quality signal\nRSSI_THRESHOLD_2 = 56 good signal */
    public var wifi_status: Int?
    public var new_feature_avail: Bool?
    public var first_pid_avail: Bool?
    public var data_type: [String]?
    

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["_id"] = self._id
        nillableDictionary["behavior"] = self.behavior
        nillableDictionary["cipher_id"] = self.cipher_id
        nillableDictionary["date_setup"] = self.date_setup?.encodeToJSON()
        nillableDictionary["firmware"] = self.firmware
        nillableDictionary["hw_version"] = self.hw_version
        nillableDictionary["heating_system"] = self.heating_system?.encodeToJSON()
        nillableDictionary["house_model"] = self.house_model?.encodeToJSON()
        nillableDictionary["ip"] = self.ip
        nillableDictionary["last_fw_update"] = self.last_fw_update
        nillableDictionary["last_radio_store"] = self.last_radio_store
        nillableDictionary["last_status_store"] = self.last_status_store
        nillableDictionary["last_upgrade"] = self.last_upgrade
        nillableDictionary["module_name"] = self.module_name
        nillableDictionary["modules"] = self.modules?.encodeToJSON()
        nillableDictionary["place"] = self.place?.encodeToJSON()
        nillableDictionary["setpoint"] = self.setpoint
        nillableDictionary["setpoint_default_duration"] = self.setpoint_default_duration
        nillableDictionary["setpoint_order"] = self.setpoint_order?.encodeToJSON()
        nillableDictionary["public_ext_data"] = self.public_ext_data
        nillableDictionary["station_name"] = self.station_name
        nillableDictionary["therm_program"] = self.therm_program?.encodeToJSON()
        nillableDictionary["therm_program_backup"] = self.therm_program_backup?.encodeToJSON()
        nillableDictionary["therm_program_order"] = self.therm_program_order?.encodeToJSON()
        nillableDictionary["type"] = self.type
        nillableDictionary["user_owner"] = self.user_owner?.encodeToJSON()
        nillableDictionary["udp_conn"] = self.udp_conn
        nillableDictionary["wifi_status"] = self.wifi_status
        nillableDictionary["new_feature_avail"] = self.new_feature_avail
        nillableDictionary["first_pid_avail"] = self.first_pid_avail
        nillableDictionary["data_type"] = self.data_type?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
